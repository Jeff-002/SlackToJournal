[project]
name = "slack-to-journal"
version = "0.1.0"
description = "AI-powered Slack to work journal automation using direct API"
requires-python = ">=3.11"
authors = [
    {name = "SlackToJournal Team", email = "team@example.com"},
]
dependencies = [
    
    # Slack Integration
    "slack-sdk>=3.27.0",
    
    # AI Integration - Gemini 2.5
    "google-generativeai>=0.8.0",
    
    # Google Drive API
    "google-api-python-client>=2.140.0",
    "google-auth-httplib2>=0.2.0",
    "google-auth-oauthlib>=1.2.0",
    "google-auth>=2.34.0",
    
    # Settings Management
    "pydantic>=2.7.0",
    "pydantic-settings>=2.2.0",
    "python-dotenv>=1.0.0",
    
    # Logging
    "loguru>=0.7.0",
    
    # YAML Support
    "pyyaml>=6.0.0",
    
    # Date/Time utilities
    "python-dateutil>=2.9.0",
    
    # CLI interface
    "click>=8.1.0",
    
    # GUI interface
    "nicegui>=1.4.0",
]

[dependency-groups]
dev = [
    # Testing
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    
    # Code Quality
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.10.0,<1.18.0",
    # Alternative: "pyright>=1.1.0",  # Faster alternative to mypy
    
    # Documentation
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
]

# Lightweight development group without heavy type checking
dev-lite = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[project.scripts]
slack-to-journal = "src.main:main"